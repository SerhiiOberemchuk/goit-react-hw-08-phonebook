{"version":3,"file":"static/js/491.2cf9fe74.chunk.js","mappings":"iOAKA,MAoBA,EApBiBA,KACf,MAAMC,GAAOC,EAAAA,EAAAA,IAAYC,EAAAA,IACnBC,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4BAA2BC,SAAA,EACxCF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,uBAAsBC,SAAA,CAAC,WAASP,EAAKQ,KAAKC,kBACvDC,EAAAA,EAAAA,KAAA,UACEJ,UAAU,kBACVK,KAAK,SACLC,QAASA,KACPT,GAASU,EAAAA,EAAAA,MAAS,EAClBN,SACH,aAGG,E,qBCdH,MAAMO,EAAgBA,KAC3B,MAAMC,GAAad,EAAAA,EAAAA,IAAYe,EAAAA,IACzBC,GAAehB,EAAAA,EAAAA,IAAYiB,EAAAA,IAE3BC,GAAYlB,EAAAA,EAAAA,IAAYmB,EAAAA,IAC9B,OACEV,EAAAA,EAAAA,KAAA,UAAAH,UACEG,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,mEAAkEC,UAC/EF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC9BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAmBe,GAAG,qBAAoBd,SAAA,EACvDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,EACjCG,EAAAA,EAAAA,KAACY,EAAAA,GAAO,CAAChB,UAAU,YAAY,eAAa,OAAOiB,GAAG,IAAGhB,SAAC,SAGzDQ,IACCL,EAAAA,EAAAA,KAACY,EAAAA,GAAO,CAAChB,UAAU,WAAWiB,GAAG,YAAWhB,SAAC,iBAKjDG,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,aAAYC,SACxBQ,GACCL,EAAAA,EAAAA,KAAAc,EAAAA,SAAA,CAAAjB,UACEG,EAAAA,EAAAA,KAACX,EAAQ,OAGXM,EAAAA,EAAAA,MAAAmB,EAAAA,SAAA,CAAAjB,SAAA,EACEG,EAAAA,EAAAA,KAACY,EAAAA,GAAO,CAAChB,UAAU,WAAWiB,GAAG,YAAWhB,SAAC,kBAG7CG,EAAAA,EAAAA,KAACY,EAAAA,GAAO,CAAChB,UAAU,WAAWiB,GAAG,SAAQhB,SAAC,mBAOhDU,GAAgBE,KAAcT,EAAAA,EAAAA,KAACe,EAAAA,EAAM,UAGpC,ECnCb,QATA,WACE,OACEpB,EAAAA,EAAAA,MAAAmB,EAAAA,SAAA,CAAAjB,SAAA,EACEG,EAAAA,EAAAA,KAACI,EAAa,KACdJ,EAAAA,EAAAA,KAACgB,EAAAA,GAAM,MAGb,C,mFCRO,MAAMC,EAAcC,GAASA,EAAMC,QAAQC,SAASC,MAE9CX,EAAeQ,GAASA,EAAMC,QAAQC,SAASX,UAE/Ca,EAAWJ,GAASA,EAAMC,QAAQC,SAASG,MAE3CC,EAAkBN,GAASA,EAAMC,QAAQM,OAEzCC,GAAkBC,EAAAA,EAAAA,IAC7B,CAACV,EAAaO,IACd,CAACH,EAAOI,IACCJ,EAAMI,QAAON,GAClBA,EAAQrB,KAAK8B,cAAcC,SAASJ,EAAOG,kB","sources":["components/UserMenu/UserMenu.jsx","components/NavigationBar/NavigationBar.jsx","components/Layout.jsx","store/contacts/selectors.js"],"sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logOut } from 'store/auth/operation';\nimport { selectUser } from 'store/auth/selector';\n\nconst UserMenu = () => {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"d-flex align-items-center\">\n      <p className=\"me-3 mt-auto mb-auto\">Welcome {user.name.toUpperCase()}</p>\n      <button\n        className=\"btn btn-warning\"\n        type=\"button\"\n        onClick={() => {\n          dispatch(logOut());\n        }}\n      >\n        Logout\n      </button>\n    </div>\n  );\n};\n\nexport default UserMenu;\n","import Loader from 'components/Loader/Loader';\nimport UserMenu from 'components/UserMenu/UserMenu';\nimport { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { selectisLoggedIn, selectisRefreshing } from 'store/auth/selector';\nimport { getIsLoading } from 'store/contacts/selectors';\n\nexport const NavigationBar = () => {\n  const isLoggedIn = useSelector(selectisLoggedIn);\n  const isRefreshing = useSelector(selectisRefreshing);\n\n  const isLoading = useSelector(getIsLoading);\n  return (\n    <header>\n      <nav className=\"container navbar navbar-expand-lg bg-body-tertiary border-bottom\">\n        <div className=\"container-fluid\">\n          <div className=\" navbar-collapse\" id=\"navbarNavAltMarkup\">\n            <div className=\"navbar-nav me-auto\">\n              <NavLink className=\"nav-link \" aria-current=\"page\" to=\"/\">\n                Home\n              </NavLink>\n              {isLoggedIn && (\n                <NavLink className=\"nav-link\" to=\"/contacts\">\n                  Contacts\n                </NavLink>\n              )}\n            </div>\n            <div className=\"navbar-nav\">\n              {isLoggedIn ? (\n                <>\n                  <UserMenu />\n                </>\n              ) : (\n                <>\n                  <NavLink className=\"nav-link\" to=\"/register\">\n                    Registration\n                  </NavLink>\n                  <NavLink className=\"nav-link\" to=\"/login\">\n                    LogIn\n                  </NavLink>\n                </>\n              )}\n            </div>\n          </div>\n          {(isRefreshing || isLoading) && <Loader />}\n        </div>\n      </nav>\n    </header>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport { NavigationBar } from './NavigationBar/NavigationBar';\n\nfunction Layout() {\n  return (\n    <>\n      <NavigationBar />\n      <Outlet />\n    </>\n  );\n}\n\nexport default Layout;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contact.contacts.items;\n\nexport const getIsLoading = state => state.contact.contacts.isLoading;\n\nexport const getError = state => state.contact.contacts.error;\n\nexport const getStatusFilter = state => state.contact.filter;\n\nexport const visibleContacts = createSelector(\n  [getContacts, getStatusFilter],\n  (items, filter) => {\n    return items.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n"],"names":["UserMenu","user","useSelector","selectUser","dispatch","useDispatch","_jsxs","className","children","name","toUpperCase","_jsx","type","onClick","logOut","NavigationBar","isLoggedIn","selectisLoggedIn","isRefreshing","selectisRefreshing","isLoading","getIsLoading","id","NavLink","to","_Fragment","Loader","Outlet","getContacts","state","contact","contacts","items","getError","error","getStatusFilter","filter","visibleContacts","createSelector","toLowerCase","includes"],"sourceRoot":""}